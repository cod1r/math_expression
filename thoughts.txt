5 ^ 5 * 4 - 3
		-
			3
	 *
		 4
	^
5 5

5 + 5 - 3

+5
-5,3

Algo:
	expression ->
		loop until find operator then recurse right
			if right expression is number we set as right tree
			if operator we check operator precedence
				low -> right
				high -> left
5 ^ 5 * 4 - 3
	5: expression
	^: operator
	recurse
		5 * 4 - 3
			5: expression
			*: operator
			recurse
				4 - 3
					4: expression
					-: operator
					recurse
						3
						3: expression
				3 -> right tree
				- -> operator but we need to compare to *

expr left -> 5
expr right -> 5
expr op -> ^
expr = expr { left: expr, right: none }

expr rigth -> 4
expr op -> *
expr = expr { left: expr, right none }

expr right -> 3
expr op -> -

--------------

--------------

5 ^ 5
	* 4
		- 3


5 * 4 * 3 * 2 * 1
*1
*2
*3
*54




TODO:
5 + (5) * 5
